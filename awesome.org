* Documentation
** TODO Key bindings

   (Modkey is windows key "W")

| Key binding | Explanation                           |
|-------------+---------------------------------------|
|             | Layout manipulaption                  |
| W-S-j       | Swap window with next window          |
| W-S-k       | Swap window wih previous window       |
| W-SPACE     | Cycle layout                          |
| W-S-SPACE   | Cycle layout inverse                  |
| W-C-n       | Client restore (unminimize)           |
|             |                                       |
|             | Change Focus                          |
| W-j         | Focus window down                     |
| W-k         | Focus window up                       |
| W-h         | Focus window left                     |
| W-l         | Focus window right                    |
| W-u         | Jump to the the window flagged urgent |
| W-Tab       | Cycle to previously selected windows  |
|             |                                       |
|             | Control surroundings                  |
| W-b         | Hide top bar                          |
| W-C-r       | Restart awesome                       |
| W-S-q       | Quit awesome                          |
| W-r         | start prompt                          |
| W-x         | Run lua code                          |
|             |                                       |
|             | Start programs                        |
| W-RETURN    | Spawn terminal                        |
| W-e         | Start editor                          |
| W-i         | Start browser                         |
|             |                                       |

** TODO Required packages 

*** Eminent

[[https://awesome.naquadah.org/wiki/Eminent][Awesome wiki eminent]]
This is for version 3.5. 

#+BEGIN_SRC sh
git clone https://github.com/guotsuan/eminent.git
cp eminent/eminent.lua ~/.config/awesome/
#+END_SRC

** ice package

ice is a package for LUA that aims to sepparate data and UI. This should work more flexible for creating what I need.

ice/data -> contains all the functions to retreive data
ice/view -> contains functionallity for showing things

** Colors
   Base colors are based on [[https://github.com/altercation/solarized][solarized]]

   - [[https://raw.githubusercontent.com/altercation/solarized/master/img/solarized-palette.png][The pallet]]
   - [[https://github.com/altercation/solarized/tree/master/gimp-palette-solarized][Color codes (gimp)]]

* Functionallity
** System info
*** TODO Network
  
   Show only current trafic on graph (up and down)
   - Show wireless/wired
   - Show alternative connection if possible
   - Show disconnected
     - Hide all graphs
     - Show alert

   Create a detail window with a list of every interface
   - with a hisotry graph
   - With total amount of MBs transferd up and down 

   Show wireless icon and show list available networks
   Conenct via command line (xterm)
 
*** TODO Memory
   Add a drop down with a bar
   
*** TODO CPU
   Show detail with all CPU's
*** TODO Disk
   Show /home as first disk
   Drop down with all other disks
*** TODO Calendar
    Calendar should look 
** Keybiding
*** TODO clear up key bindings 
    How are things flagged urgent?
    W-C-j and W-C-k seem useless now?
    W-Tab should handle more as useually
** Notifications
*** TODO Battery 
*** TODO USB
** Applications
** TODO Icon bar
   A  list of use applications/actions on a side bar on the left.
   Should also correctly set screen
   Needs to appear/hide

   Actions
   - Netflix full screen
   - Shutdown

** Screen behavior
*** TODO Set window to not go transparent
** Notifications
   Something android like
** Graphics
   
   Info Top Right
   \N [...|.||] [.....] \M
   Different colors for every section

   Popup 
   Animated?
   Thick bar floatig a bit under the top of the screen
* Technical documentation

This is all in context of awesome wm.

[[https://awesome.naquadah.org/doc/api/][awesome API]]

** Custom widget

- fit: Return the dimensions, the dimension parameters are the space available
- draw: Should contaion the code that does the drawing
  - wibox
  - cr: cairo object
  - width of the object
  - height of the object

#+BEGIN_SRC lua
  local myWidget = wibox.widget.base.make_widget()
     
  myWidget.fit = function(myWidget, width, height)
     return height, height
  end

  myWidget.draw = function(myWidget, wibox, cr, width, height)
     -- cairo drawing code goes here   
  end
#+END_SRC

** Awesome
*** Add image

#+BEGIN_SRC lua
 myicon = wibox.widget.imagebox()
 myicon:set_image(awful.util.getdir("config") .. "/myicon.png")
#+END_SRC

** cairo lua
*** Draw text

#+BEGIN_SRC lua
  font="SquareFont"
  font_size=28
  text=os.date('%H:%M')
  xpos,ypos=0,22
  red,green,blue,alpha=1,1,1,1
  font_slant=CAIRO_FONT_SLANT_NORMAL
  font_face=CAIRO_FONT_WEIGHT_NORMAL
  ----------------------------------
  cr:select_font_face (font, font_slant, font_face);
  cr:set_font_size (font_size)
  cr:set_source_rgba (red,green,blue,alpha)
  cr:move_to (xpos,ypos)
  cr:show_text (text)
  cr:stroke ()
#+END_SRC
