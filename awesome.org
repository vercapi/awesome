* Documentation
** Key bindings

   (Modkey is windows key "W")

| Key binding | Function                              |
|-------------+---------------------------------------|
|             | Layout manipulaption                  |
| W-S-j       | Swap window with next window          |
| W-S-k       | Swap window wih previous window       |
| W-SPACE     | Cycle layout                          |
| W-S-SPACE   | Cycle layout inverse                  |
| W-C-n       | Client restore (unminimize)           |
| W-n         | Minimize                              |
| W-C-RET     | Make current window master            |
|             |                                       |
|             | Changing layout size                  |
| W-S-l       | Increase master size                  |
| W-S-h       | Decrease master size                  |
| W-v         | Increase window size                  |
| W-S-v       | Decrease window size                  |
|             |                                       |
|             | Change window                         |
| W-f         | Fullscreen                            |
| W-S-c       | Kill window                           |
| W-C-SPACE   | Toggle floating behavior              |
| W-t         | Set window "on top"                   |
|             |                                       |
|             | Change Focus                          |
| W-down      | Focus window down                     |
| W-up        | Focus window up                       |
| W-left      | Focus window left                     |
| W-right     | Focus window right                    |
| W-u         | Jump to the the window flagged urgent |
| W-Tab       | Cycle to previously selected windows  |
|             |                                       |
|             | Control surroundings                  |
| W-b         | Hide top bar                          |
| W-C-r       | Restart awesome                       |
| W-S-q       | Quit awesome                          |
| W-r         | start prompt                          |
| W-x         | Run lua code                          |
|             |                                       |
|             | Start programs                        |
| W-RETURN    | Spawn terminal                        |
| W-e         | Start editor                          |
| W-i         | Start browser                         |
|             |                                       |
|             | Tags                                  |
| W-[0-9]     | Move to tag                           |
| W-C-[0-9]   | What tags to show at the same time    |
| W-S-[0-9]   | Move window to tag                    |

** TODO Required packages 
*** Eminent

    [[https://awesome.naquadah.org/wiki/Eminent][Awesome wiki eminent]]
    This is for version 3.5. 
    
    #+BEGIN_SRC sh
    git clone https://github.com/guotsuan/eminent.git
    cp eminent/eminent.lua ~/.config/awesome/
    #+END_SRC
    
** ice package

ice is a package for LUA that aims to sepparate data and UI. This should work more flexible for creating what I need.

ice/data -> contains all the functions to retreive data
ice/view -> contains functionallity for showing things

*** Battery
    Installed upower

** Colors
   Base colors are based on [[https://github.com/altercation/solarized][solarized]]

   - [[https://raw.githubusercontent.com/altercation/solarized/master/img/solarized-palette.png][The pallet]]
   - [[https://github.com/altercation/solarized/tree/master/gimp-palette-solarized][Color codes (gimp)]]

*** TODO Create a grey scale version
    
* Functionallity
** System info
*** DONE Network
  
   Show only current trafic on graph (up and down)
   - Show wireless/wired
   - Show alternative connection if possible
   - Show disconnected
   - Show status warnings
 
*** DONE Memory
    Show free memory
   
*** DONE CPU
   Show load with graph
*** DONE Disk
   Show /home as first disk
*** TODO Clock
    
    Digital clock updates now on the minute. In practice this is sometimes a few seconds off.
    
**** QAnalog clock
*** TODO Music/volume
** Detailed system info
   When clicking on the graphs addtional info and possible actions
*** TODO Network
   Create a detail window with a list of every interface
   - with a hisotry graph
   - With total amount of MBs transferd up and down 

   Show wireless icon and show list available networks
   Button to Connect/Disconnect
*** TODO Memory
    Show top 5 memory consumers with kill button
*** TODO CPU
    Show top 5 cpu consumers with kill button
*** TODO Disk
    Show all the disks and the % and bar of used space
*** TODO Calendar
    Show calendar
    If possible connected with google?

** Keybinding
*** DONE clear up key bindings 
    How are things flagged urgent?
    W-C-j and W-C-k seem useless now?
    W-Tab should handle more as useual
** Notification
*** TODO General notifications
    Anroid like messaging
    Keep a list with all messages. Messages need to be dismissed. Or actions can be taken
*** DONE Battery     
    Battery will show dialog when the battery is empty. -> Default by awesome via system messages on dbus
    Warning and error icons will be shown on the battert icon -> Implemented in the icon

*** DONE Spotify
    Seems to work out of the box
*** TODO USB connection
    Should show when device is connected, possible actions
** Applications
*** DONE Autostart applications
    - clementine & pavucontrol
    - chromium
    - emacs
*** TODO Have correct tags, size, layout for used applications
    - chromium
    - emacs
    - spotify & pavucontrol
    - blender
    - inkscape
    - gimp
    - jdeveloper & sqldeveloper
*** DONE Functionality to launch applications or switch to them
    This results in only having one instance and the same shortcut to switch to or launch
    implemented in ice.view.client_manager.spawn(p_command)
** TODO Icon bar
   A  list of use applications/actions on a side bar on the left.
   Should also correctly set screen. If application open it should go to the application instead of opening it
   Needs to appear/hide

   Actions
   - Netflix full screen
   - Shutdown
   - Emacs
   - Chromium
   - Spotify
   - jdeveloper -> Different versions
   - sqldeveloper

** Graphics
*** TODO Theme based
    Make it possible to switch between colors and grey scale
*** TODO Changable
    - Small and thick bar -> icons and sepators need to scale
    - Hide aditional info so only the icons remain with the warning message
** Code
*** TODO Make rc.lua in org mode
*** TODO Change camel casing to use _
** TODO Mutliple screen management

   easy add/remove monitor
   copy/move the windows between moinitors

* Migration
** DONE Top bar to oringal state
** DONE Migrate keybindings
   Didn't migrate kep tnew standards as they were close enough.
** DONE Migrate rules
** DONE Migrate application shortcuts
** DONE Re-enable open or goto functionality
** DONE Use new buttons in own theme
** DONE Set good default layout
* Bugs/Improvements
** TODO Current CPU not average
** TODO Not just free but available memeory
** TODO No warning when network is wired
** TODO Clock only updates every few minutes
** TODO Switching to second screen doesn't work
* Technical documentation
  Documentation on tools, libraries, etc. that are used in this awesom configuratio

  This is all in context of awesome wm. 

[[https://awesome.naquadah.org/doc/api/][awesome API]]

** Custom widget

- fit: Return the dimensions, the dimension parameters are the space available
- draw: Should contaion the code that does the drawing
  - wibox
  - cr: cairo object
  - width of the object
  - height of the object

#+BEGIN_SRC lua
  local myWidget = wibox.widget.base.make_widget()
     
  myWidget.fit = function(myWidget, width, height)
     return height, height
  end

  myWidget.draw = function(myWidget, wibox, cr, width, height)
     -- cairo drawing code goes here   
  end
#+END_SRC

** Awesome
*** Add image

#+BEGIN_SRC lua
 myicon = wibox.widget.imagebox()
 myicon:set_image(awful.util.getdir("config") .. "/myicon.png")
#+END_SRC

*** Resize, layout component instead of using all available space
#+BEGIN_SRC lua
  iconMargin = wibox.container.margin(clockIcon, 0, 0)
  iconMargin:set_top(3)
  iconMargin:set_bottom(3)
  iconMargin:set_right(5)
  iconMargin:set_left(5)
#+END_SRC
** cairo lua
[[http://www.dynaset.org/dogusanh/download/luacairo.html][lua cairo API]]
[[http://crunchbang.org/forums/viewtopic.php?id%3D17246][lua cairo examples]] examples are actually for conky

*** Draw text

#+BEGIN_SRC lua
  font="SquareFont"
  font_size=28
  text=os.date('%H:%M')
  xpos,ypos=0,22
  red,green,blue,alpha=1,1,1,1
  font_slant=CAIRO_FONT_SLANT_NORMAL
  font_face=CAIRO_FONT_WEIGHT_NORMAL
  ----------------------------------
  cr:select_font_face (font, font_slant, font_face);
  cr:set_font_size (font_size)
  cr:set_source_rgba (red,green,blue,alpha)
  cr:move_to (xpos,ypos)
  cr:show_text (text)
  cr:stroke ()
#+END_SRC
*** Draw line

#+BEGIN_SRC lua
  line_width=10
  line_cap=CAIRO_LINE_CAP_BUTT
  red,green,blue,alpha=pColor.red(),pColor.green(),pColor.blue(),1
  startx=0
  starty=0
  ----------------------------
  cr:set_line_width(line_width)
  cr:set_line_cap(line_cap)
  cr:set_source_rgba(red,green,blue,alpha)
  cr:move_to(startx,starty)
  cr:line_to(10,20)
  cr:stroke()
#+END_SRC
*** Draw rectangle

#+BEGIN_SRC lua
  line_width=5
  top_left_x=20
  top_left_y=20
  rec_width=100
  rec_height=50
  red=1
  green=0
  blue=0
  alpha=1
    ----------------------------
  cairo_set_line_width (cr,line_width)
  cairo_rectangle (cr,top_left_x,top_left_y,rec_width,rec_height)
  cairo_set_source_rgba (cr,red,green,blue,alpha)
#+END_SRC
** dbus lua
   
   The standard lib seemed a bit dificult, especially because running standalone (outside of awesome) tests wasn't as strait foreward as I had hoped.
   
   [[https://github.com/dodo/lua-dbus][lua dbus]]
   
   Install the package luarocks on your system and then
   #+BEGIN_SRC sh
   sudo luarocks install --server=http://luarocks.org/dev ldbus DBUS_ARCH_DIR=/usr/lib/dbus-1.0/ DBUS_INCDIR=/usr/include/dbus-1.0/ DBUS_LIBDIR=/usr/lib
   sudo luarocks install --server=http://luarocks.org/dev lua-dbus DBUS_ARCH_DIR=/usr/lib/dbus-1.0/ DBUS_INCDIR=/usr/include/dbus-1.0/ DBUS_LIBDIR=/usr/lib
   #+END_SRC

   list of available services
   --system vs --session
   #+BEGIN_SRC sh
   dbus-send --system --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.ListNames
   #+END_SRC

   #+RESULTS:
   | method | return                          | time=1441923228.109391 | sender=org.freedesktop.DBus | -> | destination=:1.12924 | serial=3 | reply_serial=2 |
   | array  | [                               |                        |                             |    |                      |          |                |
   | string | org.freedesktop.DBus            |                        |                             |    |                      |          |                |
   | string | :1.7                            |                        |                             |    |                      |          |                |
   | string | org.freedesktop.login1          |                        |                             |    |                      |          |                |
   | string | :1.8                            |                        |                             |    |                      |          |                |
   | string | :1.9                            |                        |                             |    |                      |          |                |
   | string | :1.12924                        |                        |                             |    |                      |          |                |
   | string | org.freedesktop.DisplayManager  |                        |                             |    |                      |          |                |
   | string | org.freedesktop.systemd1        |                        |                             |    |                      |          |                |
   | string | org.freedesktop.PolicyKit1      |                        |                             |    |                      |          |                |
   | string | org.freedesktop.NetworkManager  |                        |                             |    |                      |          |                |
   | string | org.freedesktop.UPower          |                        |                             |    |                      |          |                |
   | string | :1.0                            |                        |                             |    |                      |          |                |
   | string | :1.7071                         |                        |                             |    |                      |          |                |
   | string | :1.14                           |                        |                             |    |                      |          |                |
   | string | :1.1                            |                        |                             |    |                      |          |                |
   | string | :1.2                            |                        |                             |    |                      |          |                |
   | string | :1.3                            |                        |                             |    |                      |          |                |
   | string | :1.17                           |                        |                             |    |                      |          |                |
   | string | fi.epitest.hostap.WPASupplicant |                        |                             |    |                      |          |                |
   | string | :1.4                            |                        |                             |    |                      |          |                |
   | string | :1.1437                         |                        |                             |    |                      |          |                |
   | string | org.freedesktop.RealtimeKit1    |                        |                             |    |                      |          |                |
   | string | :1.18                           |                        |                             |    |                      |          |                |
   | string | :1.5                            |                        |                             |    |                      |          |                |
   | string | fi.w1.wpa_supplicant1           |                        |                             |    |                      |          |                |
   | string | :1.19                           |                        |                             |    |                      |          |                |
   | string | :1.6                            |                        |                             |    |                      |          |                |
   | ]      |                                 |                        |                             |    |                      |          |                |

   Introspect specific server

   It's the /org/freedesjtop/DBus that controls what service is printed out (Doesn't work in org babel)
   #+BEGIN_SRC sh
   dbus-send --session --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus org.freedesktop.DBus.Introspectable.Introspect
   #+END_SRC

   #+RESULTS:

   example for getting all power devices: [[http://upower.freedesktop.org/docs/UPower.html][UPower documenation]]
   #+BEGIN_SRC sh
   dbus-send --system --dest=org.freedesktop.UPower --type=method_call --print-reply /org/freedesktop/UPower  org.freedesktop.UPower.EnumerateDevices
   #+END_SRC

   #+RESULTS:
   | method | return | time=1441923556.512057                          | sender=:1.3 | -> | destination=:1.13257 | serial=331 | reply_serial=2 |
   | array  | [      |                                                 |             |    |                      |            |                |
   | object | path   | /org/freedesktop/UPower/devices/line_power_ACAD |             |    |                      |            |                |
   | object | path   | /org/freedesktop/UPower/devices/battery_BAT1    |             |    |                      |            |                |
   | ]      |        |                                                 |             |    |                      |            |                |

 
   #+BEGIN_SRC sh
   dbus-send --print-reply --system  --dest=org.freedesktop.UPower /org/freedesktop/UPower/devices/battery_BAT1 org.freedesktop.DBus.Properties.GetAll string:org.freedesktop.UPower.Device
   #+END_SRC

** Testing
   lua-testy, because simple for small projects like this
   It supports lua 5.3
   
   [[https://github.com/siffiejoe/lua-testy][lua-testy on github]]
   
   #+BEGIN_SRC sh
   git clone https://github.com/siffiejoe/lua-testy.git
   #+END_SRC
   
   Tests can be found in the ice/test dir, subdirectories follow the normal hierarchy

   run tests: lua testy.lua <file-to-test>
   
*** Creating tests

    inlcude line that points to the parent of the ice folder
    #+BEGIN_SRC lua
    package.path = package.path .. ';../../../?.lua'
    #+END_SRC 

*** Testing awesome wm

    Testing without actually needing to restart the running awesome wm.
    
    Install xephyr 
    #+BEGIN_SRC shell
    pacman -S xorg-server-xephyr
    #+END_SRC
    xephyr can show a x server inside of a window.

    Get the testing tool [[https://github.com/serialoverflow/awmtt][awmtt]]
    #+BEGIN_SRC sh
    wget -O ./awmtt  https://raw.githubusercontent.com/mikar/awmtt/master/awmtt.sh
    chmod u+x ./awmtt
    #+END_SRC

** Tools
*** xprop, check windows
    
    #+BEGIN_SRC sh
    xprop
    #+END_SRC

    Example result clementine

    XdndAware(ATOM) = BITMAP
    _MOTIF_DRAG_RECEIVER_INFO(_MOTIF_DRAG_RECEIVER_INFO) = 0x6c, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0
    _NET_WM_NAME(UTF8_STRING) = "The Stanfields - Sunday Warships"
    WM_CLIENT_LEADER(WINDOW): window id # 0x2200009
    _NET_WM_PID(CARDINAL) = 29248
    _NET_WM_WINDOW_TYPE(ATOM) = _NET_WM_WINDOW_TYPE_NORMAL
    _MOTIF_WM_HINTS(_MOTIF_WM_HINTS) = 0x3, 0x3e, 0x7e, 0x0, 0x0
    WM_PROTOCOLS(ATOM): protocols  WM_DELETE_WINDOW, WM_TAKE_FOCUS, _NET_WM_PING, _NET_WM_SYNC_REQUEST
    WM_NAME(STRING) = "The Stanfields - Sunday Warships" //-> Window title, 'name' rule
    WM_LOCALE_NAME(STRING) = "en_US.utf8"
    WM_CLASS(STRING) = "clementine", "Clementine"  //2nd one -> Unchangable name, 'class' rule // 1st one -> Can be set, differentiates between differnt instance of same application
    WM_HINTS(WM_HINTS):
	  	Client accepts input or input focus: True
		  Initial state is Normal State.
  		bitmap id # to use for icon: 0x2200012
	  	window id # of group leader: 0x2200009
    WM_NORMAL_HINTS(WM_SIZE_HINTS):
  		user specified location: 1, 45
		  program specified location: 1, 45
		  user specified size: 1598 by 1732
		  program specified size: 1598 by 1732
		  program specified minimum size: 774 by 216
		  window gravity: NorthWest
    WM_CLIENT_MACHINE(STRING) = "nitro"
    WM_COMMAND(STRING) = { "clementine" }

    More [[https://awesome.naquadah.org/wiki/Understanding_Rules][documentation]]

